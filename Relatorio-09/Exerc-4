#Modules
module Rastreavel
  def obter_localizacao(hora)
    "Localiza√ß√£o de #{self.class}: #{@localizacao} √†s #{hora}"
  end
end

module Perigoso
  def calcular_risco
    raise NotImplementedError, "Subclasse deve implementar calcular_risco"
  end
end

#Classe base Participante
class Participante
  attr_accessor :nome, :localizacao

  def initialize(nome)
    @nome = nome
    @localizacao = "Desconhecida"
  end

  def to_s
    "#{@nome} (#{self.class})"
  end
end

#Classes Detetive e MestreDoCrime
class Detetive < Participante
  include Rastreavel

  def investigar
    "#{@nome} est√° investigando pistas..."
  end
end

class MestreDoCrime < Participante
  include Rastreavel
  include Perigoso

  def calcular_risco
    #Apenas um exemplo simples
    rand(50..100)
  end
end

#Classe Cenario
class Cenario
  def initialize
    @participantes = []
  end

  def adicionar_participante(participante)
    @participantes << participante
  end

  def listar_participantes
    puts "\n--- Participantes no cen√°rio ---"
    @participantes.each { |p| puts p }
  end

  #M√©todo identificar_ameacas
  def identificar_ameacas
    perigosos = @participantes.select { |p| p.respond_to?(:calcular_risco) }
    if perigosos.empty?
      puts "\nNenhum criminoso identificado."
    else
      puts "\nAlvos perigosos detectados:"
      perigosos.each do |alvo|
        puts "- #{alvo.nome} (Risco: #{alvo.calcular_risco})"
      end
    end
    perigosos
  end
end

#Main
puts "üïµÔ∏è Iniciando simula√ß√£o de rastreamento..."

#Cria inst√¢ncias dos personagens
sherlock = Detetive.new("Sherlock Holmes")
moriarty = MestreDoCrime.new("Moriarty")

#Coleta localiza√ß√µes
print "Digite a localiza√ß√£o atual de Sherlock: "
sherlock.localizacao = gets.chomp

print "Digite a localiza√ß√£o atual de Moriarty: "
moriarty.localizacao = gets.chomp

# Cria cen√°rio e adiciona participantes
cenario = Cenario.new
cenario.adicionar_participante(sherlock)
cenario.adicionar_participante(moriarty)

# Exibe lista e rastreamento
cenario.listar_participantes

puts "\nRastreamento de localiza√ß√µes:"
hora_atual = "14:30"
puts sherlock.obter_localizacao(hora_atual)
puts moriarty.obter_localizacao(hora_atual)

#Identifica amea√ßas
cenario.identificar_ameacas
